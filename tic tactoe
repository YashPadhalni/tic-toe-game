#include <iostream>
using namespace std;

// Function prototypes
void displayBoard(char board[3][3]);
bool checkWin(char board[3][3], char player);
bool checkDraw(char board[3][3]);
void makeMove(char board[3][3], char player);
void resetBoard(char board[3][3]);

int main() {
    char board[3][3];
    char currentPlayer = 'X';
    bool playAgain = true;
    char choice;

    while (playAgain) {
        resetBoard(board);

        bool gameWon = false;
        bool gameDraw = false;

        cout << "Welcome to Tic-Tac-Toe!" << endl;

        // Main game loop
        while (!gameWon && !gameDraw) {
            displayBoard(board);
            makeMove(board, currentPlayer);

            gameWon = checkWin(board, currentPlayer);
            if (gameWon) {
                displayBoard(board);
                cout << "Player " << currentPlayer << " wins!" << endl;
                break;
            }

            gameDraw = checkDraw(board);
            if (gameDraw) {
                displayBoard(board);
                cout << "It's a draw!" << endl;
                break;
            }

            // Switch players
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }

        // Ask if the players want to play again
        cout << "Do you want to play again? (y/n): ";
        cin >> choice;
        if (choice == 'n' || choice == 'N') {
            playAgain = false;
        }
    }

    cout << "Thanks for playing!" << endl;
    return 0;
}

// Function to reset the board
void resetBoard(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            board[i][j] = '1' + i * 3 + j;
        }
    }
}

// Function to display the game board
void displayBoard(char board[3][3]) {
    cout << endl;
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << " " << board[i][j] << " ";
            if (j < 2) cout << "|";
        }
        cout << endl;
        if (i < 2) cout << "---|---|---" << endl;
    }
    cout << endl;
}

// Function to make a move
void makeMove(char board[3][3], char player) {
    int move;
    bool validMove = false;

    while (!validMove) {
        cout << "Player " << player << ", enter your move (1-9): ";
        cin >> move;

        if (move >= 1 && move <= 9) {
            int row = (move - 1) / 3;
            int col = (move - 1) % 3;

            if (board[row][col] != 'X' && board[row][col] != 'O') {
                board[row][col] = player;
                validMove = true;
            } else {
                cout << "That spot is already taken. Try again." << endl;
            }
        } else {
            cout << "Invalid move. Please enter a number between 1 and 9." << endl;
        }
    }
}

// Function to check if the current player has won
bool checkWin(char board[3][3], char player) {
    // Check rows and columns
    for (int i = 0; i < 3; i++) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }

    // Check diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }

    return false;
}

// Function to check if the game is a draw
bool checkDraw(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O') {
                return false;
            }
        }
    }
    return true;
}
